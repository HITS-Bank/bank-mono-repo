version: "3.7"

services:
    postgresql-core:
      image: postgres:15.7
      container_name: postgresql-core
      command: postgres -c 'max_connections=200'
      environment:
        POSTGRES_DB: core_db
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: 12345
      ports:
        - "5433:5432"
      volumes:
        - postgres-core:/var/lib/postgresql/data
      networks:
        - network-local

    postgresql-credit:
      image: postgres:15.7
      container_name: postgresql-credit
      command: postgres -c 'max_connections=200'
      environment:
        POSTGRES_DB: credit_db
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: 12345
      ports:
        - "5434:5432"
      volumes:
        - postgres-credit:/var/lib/postgresql/data
      networks:
        - network-local

    postgresql-user:
      image: postgres:15.7
      container_name: postgresql-user
      command: postgres -c 'max_connections=200'
      environment:
        POSTGRES_DB: user_db
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: 12345
      ports:
        - "5435:5432"
      volumes:
        - postgres-user:/var/lib/postgresql/data
      networks:
        - network-local


    redis:
      image: redis:latest
      container_name: redis_container2
      restart: always
      ports:
        - "6379:6379"
      volumes:
        - redis_data:/data
      networks:
        - network-local
      command: ["redis-server", "--appendonly", "yes"]

    redis-commander:
      image: rediscommander/redis-commander:latest
      container_name: redis_commander2
      restart: always
      environment:
        - REDIS_HOSTS=local:redis:6379
      networks:
        - network-local
      ports:
        - "8081:8081"

#    kafka:
#      container_name: kafka
#      image: bitnami/kafka:latest
#      hostname: kafka
#      environment:
#        KAFKA_ENABLE_KRAFT: yes
#        KAFKA_CFG_PROCESS_ROLES: broker,controller
#        KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
#        KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
#        KAFKA_CFG_LISTENERS: INTERNAL://:9094,CONTROLLER://:9093,EXTERNAL://:9092
#        KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
#        KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:9092
#        KAFKA_CFG_NODE_ID: 1
#        KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
#        ALLOW_PLAINTEXT_LISTENER: yes
#        KAFKA_KRAFT_CLUSTER_ID: MqT00wb8STSuAfEFsrwaeA
#      ports:
#        - "9092:9092"
#      networks:
#        - network-local


    zookeeper:
      image: confluentinc/cp-zookeeper:latest
      container_name: zookeeper-1
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
      ports:
        - "2181:2181"
      networks:
        - network-local

    kafka:
      image: confluentinc/cp-kafka:latest
      container_name: kafka-1
      depends_on:
        - zookeeper
      ports:
        - "9092:9092"
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
        KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      networks:
        - network-local

    core-app:
      container_name: core-app
      build:
        context: .
        dockerfile: ./Dockerfile
        args:
          JAR_FILE: "bank-core-service/build/libs/bank-core-service-1.0.0.jar"
      depends_on:
        - postgresql-core
        - kafka
      ports:
        - "9444:9444"
      networks:
        - network-local
      environment:
        USER_DATABASE_URL: jdbc:postgresql://postgresql-core:5432/core_db
        SPRING_DATASOURCE_USERNAME: postgres
        SPRING_DATASOURCE_PASSWORD: 12345
        SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

    credit-app:
      container_name: credit-app
      build:
        context: .
        dockerfile: ./Dockerfile
        args:
          JAR_FILE: "bank-credit-service/build/libs/bank-credit-service-1.0.0-SNAPSHOT.jar"
      depends_on:
        - postgresql-credit
        - kafka
        - redis
      ports:
        - "9445:9445"
      networks:
        - network-local
      environment:
        USER_DATABASE_URL: jdbc:postgresql://postgresql-credit:5432/credit_db
        SPRING_DATASOURCE_USERNAME: postgres
        SPRING_DATASOURCE_PASSWORD: 12345
        SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
        REDIS_HOST: redis
        REDIS_PORT: 6379

    gateway-app:
      container_name: gateway-app
      build:
        context: .
        dockerfile: ./Dockerfile
        args:
          JAR_FILE: "bank-gateway-service/build/libs/bank-gateway-service-1.0-SNAPSHOT.jar"
          APP_PORT: 9446
      ports:
        - "9446:9446"
      networks:
        - network-local
      environment:
        SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

    user-app:
      container_name: user-app
      build:
        context: .
        dockerfile: ./Dockerfile
        args:
          JAR_FILE: "bank-user-service/build/libs/bank-user-service-0.0.1-SNAPSHOT.jar"
      depends_on:
        - postgresql-user
        - kafka
      ports:
        - "9447:9447"
      networks:
        - network-local
      environment:
        USER_DATABASE_URL: jdbc:postgresql://postgresql-user:5432/user_db
        SPRING_DATASOURCE_USERNAME: postgres
        SPRING_DATASOURCE_PASSWORD: 12345
        SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

volumes:
    postgres-core:
      driver: local
    postgres-credit:
      driver: local
    postgres-user:
      driver: local
    kafka_data:
      driver: local
    redis_data:
      driver: local

networks:
    network-local:
        driver: bridge
